name: CI-CD

on: push

jobs:

  pre-build:
    name: Pre-build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Install
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Test
      run: npm run test

  build:
    name: Build
    needs: pre-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.5.0

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: cicd/Dockerfile
        platforms: linux/arm64/v8
        push: true
        tags: |
          ${{ vars.DOCKER_REPO }}:latest
          ${{ vars.DOCKER_REPO }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/develop'
    needs: [ pre-build, build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v3.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
          
      - name: Create Kubernetes ConfigMaps
        uses: swdotcom/update-and-apply-kubernetes-configs@v1
        with:
          k8-config-file-paths: |
            cicd/manifests/config.yaml
            cicd/manifests/mariadb-config.yaml
          replacement-method: defined
        env:
          PORT: ${{ vars.PORT }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          UNIXPENSE_URI: ${{ vars.UNIXPENSE_URI }}
          LOKI_HOST: ${{ vars.LOKI_HOST }}
          MARIADB_HOST: ${{ vars.MARIADB_HOST }}
          MARIADB_PORT: ${{ vars.MARIADB_PORT }}
          MARIADB_DATABASE: ${{ vars.MARIADB_DATABASE }}

      - name: Create MariaDb Credentials Kubernetes Secret
        uses: Azure/k8s-create-secret@v4
        with:
          namespace: 'unixpense'
          secret-type: 'generic'
          secret-name: mariadb-cred
          string-data: |
              {
                "MARIADB_USERNAME": "${{ secrets.MARIADB_USERNAME }}",
                "MARIADB_PASSWORD": "${{ secrets.MARIADB_PASSWORD }}"
              }

      - name: Create Google OAuth2 Kubernetes Secret
        uses: Azure/k8s-create-secret@v4
        with:
          namespace: 'unixpense'
          secret-type: 'generic'
          secret-name: google-cred
          string-data: |
            {
              "GOOGLE_OAUTH2_CLIENT_ID": "${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}",
              "GOOGLE_OAUTH2_CLIENT_SECRET": "${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}",
              "GOOGLE_OAUTH2_REDIRECT_URI": "${{ secrets.GOOGLE_OAUTH2_REDIRECT_URI }}"
            }

      - name: Deploy to Kubernetes Cluster
        uses: Azure/k8s-deploy@v4.9
        with:
          namespace: unixpense
          manifests: |
            cicd/manifests/deployment.yaml
          images: |
            ${{ vars.DOCKER_REPO }}:${{ github.sha }}
          
      - name: Create Kubernetes Resources
        uses: swdotcom/update-and-apply-kubernetes-configs@v1
        with:
          k8-config-file-paths: |
            cicd/manifests/service.yaml
            cicd/manifests/ingress.yaml
          replacement-method: defined
        env:
          PORT: ${{ vars.PORT }}
          UNIXPENSE_URI: ${{ vars.UNIXPENSE_URI }}
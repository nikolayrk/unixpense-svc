name: CI-CD

on: push

jobs:

  pre-build:
    name: Pre-build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Install
      run: npm ci

    - name: Lint
      run: npm run lint

    - name: Test
      run: npm run test

  build:
    name: Build
    if: github.ref == 'refs/heads/develop'
    needs: pre-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2.5.0

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: cicd/Dockerfile
        platforms: linux/arm64/v8
        push: true
        tags: |
          ${{ vars.DOCKER_REPO }}:latest
          ${{ vars.DOCKER_REPO }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/develop'
    needs: [ pre-build, build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v3.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Create MariaDb Kubernetes Secret
        uses: Azure/k8s-create-secret@v4
        with:
          namespace: 'unixpense'
          secret-type: 'generic'
          secret-name: mariadb-secret
          string-data: |
            {
              "MARIADB_USER": "${{ secrets.MARIADB_USER }}",
              "MARIADB_PASSWORD": "${{ secrets.MARIADB_PASSWORD }}",
              "MARIADB_DATABASE": "${{ vars.MARIADB_DATABASE }}",
              "MARIADB_NFS_SERVER": "${{ vars.MARIADB_NFS_SERVER }}",
              "MARIADB_NFS_PATH": "${{ vars.MARIADB_NFS_PATH }}",
              "MARIADB_RANDOM_ROOT_PASSWORD": "yes"
            }

      - name: Deploy to Kubernetes Cluster
        uses: swdotcom/update-and-apply-kubernetes-configs@v1
        with:
          k8-config-file-paths: |
            cicd/manifests/config.yaml
            cicd/manifests/persistence.yaml
            cicd/manifests/deployment.yaml
            cicd/manifests/service.yaml
            cicd/manifests/ingress.yaml
            cicd/manifests/mariadb-service.yaml
            cicd/manifests/cronjob.yaml
          replacement-method: defined
        env:
          latest: ${{ github.sha }}
          PORT: ${{ vars.PORT }}
          NODE_ENV: ${{ vars.NODE_ENV }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          LOKI_HOST: ${{ vars.LOKI_HOST }}
          UNIXPENSE_HOST: ${{ vars.UNIXPENSE_HOST }}
          UNIXPENSE_HOST_PREFIX: ${{ vars.UNIXPENSE_HOST_PREFIX }}
          MARIADB_NFS_SERVER: ${{ vars.MARIADB_NFS_SERVER }}
          MARIADB_NFS_PATH: ${{ vars.MARIADB_NFS_PATH }}
          CRONTAB: ${{ vars.CRONTAB }}
          GMAIL_ADDRESS: ${{ secrets.GMAIL_ADDRESS }}